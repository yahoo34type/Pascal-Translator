#pragma once
void block();
void factparameter();
void programme();
void constant();
void whilestatement();
void forstatement();
void repeatstatement();
void compoundstatement();
void varpart();
void vardeclaration();
void type();
void simpletype();
void unpackedcompositetype();
void numtype();
void multipletype();
void limtype(bool);
void regtype();
void combtype();
void fieldlist();
void variativesection();
void variant();
void recordsection();
void variable();
void ifstatement();
void casestatement();
void caseelement();
void labelpart();
void statementpart();
void statement();
void unmarkedstatement();
void connstatement();
void cyclestatement();
void expression();
void simpleexpression();
void addend();
void mult();
void constpart();
void typepart();
void procfuncpart();
void procedureheader();
void functionheader();
void fparametermodule();
void paramgroup();